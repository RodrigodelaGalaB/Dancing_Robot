#include <stdint.h>
#include "tm4c123gh6pm.h"

//frecuencias en Hz
#define C 65
#define D 73
#define E 82
#define F 87
#define FS 93
#define G 98
#define GS 104
#define B 123
#define C2 131
#define C2S 139
#define D2 147
#define D2S 156
#define E2 165
#define PAU 16000000UL

//tiempos en milisegundos
#define Neg 350
#define Cor 175
#define SCor 88

const uint32_t arrfreq[76] = {3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 1, 0, 1, 0, 1, 3, 0, 3, 0, 3, 0, 3, 1, 6, 5, 7,
							  3, 0, 3, 0, 3, 0, 3, 0, 3, 0, 3, 1, 6, 5, 3, 5, 0, 5, 0, 5, 4, 0, 4, 0, 4, 0,
                              4, 2, 13, 12, 9, 8, 6, 1, 6, 8, 8, 1, 1, 6, 8, 0, 8, 12, 13, 0, 0, 0, 0};

const uint32_t arrtiempos [76] = {SCor, SCor, SCor, SCor, Cor, SCor, SCor, SCor, SCor, SCor, Cor, Cor, SCor, SCor, SCor, SCor, Cor, SCor,
                                  SCor, SCor, SCor, SCor, Cor, Cor, Cor, Cor, Cor, SCor, SCor, SCor, SCor, Cor, SCor, SCor, SCor, SCor, SCor,
                                  Cor, Cor, Cor, Cor, Cor, Cor, SCor, SCor, SCor, SCor, Cor, SCor, SCor, SCor, SCor,
                                  SCor, Cor, Cor, Cor, Cor, Cor, Cor, Cor, Cor, Cor, Cor, Neg, Cor, Cor, Cor, Cor,
                                  SCor, Neg, Cor, Cor, Neg, Neg, Neg, Neg};

void Timer0_PWM (void){

    SYSCTL_RCGC1_R |= SYSCTL_RCGC1_TIMER0;
    while ((SYSCTL_PRTIMER_R & (1<<0)) == 0);

    SYSCTL_RCGC2_R |= SYSCTL_RCGC2_GPIOB;
    while ((SYSCTL_PRGPIO_R & (1<<1)) == 0);

    TIMER0_CTL_R &= ~TIMER_CTL_TBEN;
    TIMER0_CFG_R = 4;
    TIMER0_TBMR_R = 0x00000D0A;
    TIMER0_CTL_R |= TIMER_CTL_TBPWML;

    TIMER0_TBILR_R = 30000;
    TIMER0_TBPR_R = 0;

    TIMER0_TBMATCHR_R = TIMER0_TBILR_R;

    GPIO_PORTB_PUR_R &= ~(1<<7);
    GPIO_PORTB_PDR_R &= ~(1<<7);
    GPIO_PORTB_AMSEL_R &= ~(1<<7);
    GPIO_PORTB_DIR_R |= (1<<7);
    GPIO_PORTB_AFSEL_R |= (1<<7);
    GPIO_PORTB_PCTL_R =  (GPIO_PORTB_PCTL_R & 0x0FFFFFFF) + 0x70000000;
    GPIO_PORTB_DR2R_R |= (1<<7);
    GPIO_PORTB_DEN_R |= (1<<7);

    TIMER0_CTL_R |= TIMER_CTL_TBEN;
}

void retardo_ms (uint32_t mili) {
    NVIC_ST_CTRL_R &= ~0x01;
    NVIC_ST_RELOAD_R &= ~0xFFFFFF;
    NVIC_ST_RELOAD_R |= (16000000UL * mili)/1000 - 1;
    NVIC_ST_CURRENT_R = 0;
    NVIC_ST_CTRL_R = (NVIC_ST_CTRL_R & ~0x7) + 5;
    while ((NVIC_ST_CTRL_R & (1<<16)) == 0);
}

void GeneraNota (uint32_t nota) {
const uint32_t arreg_notas[14] = {PAU, C, D, E, F, FS, G, GS, B, C2, C2S, D2, D2S, E2};
uint32_t N, PW;
    N = (16000000UL/arreg_notas[nota]) - 1;
    TIMER0_TBILR_R = N;
    TIMER0_TBPR_R = 0;
    PW = N/2;
    TIMER0_TBMATCHR_R = PW;
}


void main(void) {

uint32_t i;

Timer0_PWM();

while (1) {
    for (i = 0; i < 76; i++){
        GeneraNota(arrfreq[i]);
        retardo_ms(arrtiempos[i]);
    }
}

}


